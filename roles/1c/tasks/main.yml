# - name: 'Create {{ 1c_soft_path }}'
#   ansible.builtin.file:
#     path: "{{ 1c_soft_path }}"
#     state: directory
#     mode: '0755'
#   become: true

- name: Check timezone
  shell: timedatectl show --property=Timezone --value
  register: stdout_timedatectl

- name: Set timezone
  shell: timedatectl set-timezone Europe/Moscow
  become: true
  when: stdout_timedatectl.stdout != "Europe/Moscow"

- name: Установить нужные локали
  block:
    - name: Добавить необходимые локали в /etc/locale.gen (для Debian/Ubuntu)
      ansible.builtin.lineinfile:
        path: /etc/locale.gen
        regexp: "^#?({{ item }})"
        line: "{{ item }}"
        state: present
      loop: "{{ locales }}"
      become: true
      when: ansible_os_family == "Debian"

    - name: Добавить локали в /etc/locale.conf (для RedHat)
      ansible.builtin.lineinfile:
        path: /etc/locale.conf
        line: "{{ item }}"
        state: present
      loop: "{{ locales }}"
      become: true
      when: ansible_os_family == "RedHat"

    - name: Сгенерировать локали
      ansible.builtin.command: locale-gen "{{ item }}"
      loop: "{{ locales }}"
      become: true
      when: ansible_os_family == "Debian"

- name: Установить локаль по умолчанию
  block:
    - name: Обновить переменную LANG в /etc/default/locale (Debian/Ubuntu)
      ansible.builtin.lineinfile:
        path: /etc/default/locale
        regexp: "^LANG="
        line: "LANG={{ default_locale }}"
        create: yes
      become: true
      when: ansible_os_family == "Debian"

    - name: Обновить переменную LANG в /etc/locale.conf (RedHat)
      ansible.builtin.lineinfile:
        path: /etc/locale.conf
        regexp: "^LANG="
        line: "LANG={{ default_locale }}"
        create: yes
      become: true
      when: ansible_os_family == "RedHat"

- name: Показать все доступные локали
  shell: locale -a
  register: available_locales

- name: Показать локали по умолчанию
  shell: locale
  register: default_locales

- name: Extract server64_8_3_23_2236.tar.gz
  ansible.builtin.unarchive:
    src: /tmp/1c_install_2v/server64_8_3_23_2236.tar.gz
    dest: /tmp/1c_install_2v/
    remote_src: yes
 
- name: Set executable permissions on {{ 1c_setup_run_file }}
  ansible.builtin.file:
    path: "/tmp/1c_install_2v/{{ 1c_setup_run_file }}"
    mode: '0777'
    state: file

- name: Install setup-full-{{  1c_version }}-x86_64.run with language selection
  shell: "./{{ 1c_setup_run_file }} --mode unattended --enable-components server,ws,server_admin,config_storage_server" 
  become: true

- name: Create simlink on 1c
  shell: "systemctl link /opt/1cv8/x86_64/{{ 1c_version }}/{{ 1c_service_name }}"
  become: true

- name: 1.9 Reload systemd manager configuration
  ansible.builtin.systemd:
    daemon_reload: yes
  become: true

- name: 1.10 Enable and start {{ 1c_service_name }} service
  ansible.builtin.systemd:
    name: srv1cv8-8.3.23.2236@default.service
    state: started
    enabled: yes
  become: true

- name: Check status {{ 1c_service_name }}
  shell:  systemctl status srv1cv8-8.3.23.2236@default.service | grep Active
  register: status_1c_server_service

- name: Debuig system info
  debug:
    msg: 
      - "Timezone {{ stdout_timedatectl.stdout }}"
      - "Accessible locale: {{ available_locales.stdout }}"
      - "Default locales: {{ default_locales.stdout }}"
      - "1C Server status: {{ status_1c_server_service.stdout }}"
  when: debug_status  == true