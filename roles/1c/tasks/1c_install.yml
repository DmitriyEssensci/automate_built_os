---
# 1c_install file for 1c
- name: 1.0 Check timezone
  shell: "{{ srvr1c_shell_check_timezone }}"
  register: stdout_timedatectl

- name: 1.1 Set timezone
  shell: "{{ srvr1c_shell_timezone }}"
  become: true
  when: stdout_timedatectl.stdout != "Europe/Moscow"

- name: 1.2 Set need locale
  block:
    - name: 1.2.1 Add needs locale in {{ srvr1c_locales_files.locale_gen }}
      ansible.builtin.lineinfile:
        path: "{{ srvr1c_locales_files.locale_gen }}"
        regexp: "^#?({{ item }})"
        line: "{{ item }}"
        state: present
      loop: "{{ srvr1c_locales }}"

    - name: 1.2.2 Generate locale
      ansible.builtin.command: locale-gen "{{ item }}"
      loop: "{{ srvr1c_locales }}"
  become: true

- name: 1.3 Set locale as default
  ansible.builtin.lineinfile:
    path: "{{ srvr1c_locale_path }}"
    regexp: "^LANG="
    line: "LANG={{ srvr1c_default_locale }}"
    create: yes
  become: true

- name: 1.4 Check all aviable locale
  shell: locale -a
  register: available_locales

- name: 1.5 Check locale as default
  shell: locale
  register: default_locales
 
- name: "1.6 Extract {{ srvr1c_run_files }}"
  shell: tar -xzvf "/tmp/{{ srvr1c_artifactory_directory }}/{{ srvr1c_run_files }}" -C "/tmp/{{ srvr1c_artifactory_directory }}/"

- name: "1.7 Set executable permissions on {{ srvr1c_setup_run_file }}"
  ansible.builtin.file:
    path: "/tmp/{{ srvr1c_artifactory_directory}}/{{ srvr1c_setup_run_file }}"
    mode: '0777'
    state: file
  become: true

- name: "1.8 Start remove 1C service and  {{ srvr1c_sys_dest }} & {{ srvr1c_rac_sys_dir }} directory"
  block:
  - name: 1.8.1 Remove 1C service file
    file:
      path: "{{ srvr1c_services_destionation }}/{{ item }}"
      state: absent
    loop:
      - "{{ srvr1c_service_name }}"
      - "{{ srvr1c_ras_service_name }}"

  - name: "1.8.2 Remove {{ srvr1c_sys_dest }} and {{ srvr1c_rac_sys_dir }} directory"
    file:
      path: "{{ item }}"
      state: absent
    loop:
      - "{{ srvr1c_sys_dest }}"
      - "{{ srvr1c_rac_sys_dir }}"
    ignore_errors: true
  become: true

- name: "1.9 Install {{ srvr1c_setup_run_file }} with language selection"
  shell: "{{ srvr1c_shell_install_1c }}"
  become: true

- name: 1.10 Move service file
  template:
    src: '{{ item[0] }}'
    dest: '{{ item[1] }}'
    owner: root
    group: root
    mode: 0750
  loop:
    - "{{ srvr1c_templates_service }}"
    - "{{ srvr1c_templates_ras_service }}"
  
- name: "1.11 Create {{ srvr1c_rac_sys_dir }} directory"
  file:
    path: "{{ srvr1c_rac_sys_dir }}"
    state: directory
  become: true

- name: "1.12 Set recursive ownership of {{ srvr1c_rac_sys_dir }} to user and group"
  file:
    path: "{{ srvr1c_rac_sys_dir }}"
    owner: "{{ srvr1c_rac_user }}"         
    group: "{{ srvr1c_rac_group }}"         
    recurse: yes           
  become: true

- name: "1.13 Set recursive permissions on {{ srvr1c_rac_sys_dir }}"
  file:
    path: "{{ srvr1c_rac_sys_dir }}"
    mode: '0750'          
    recurse: yes
  become: true

# - name: 1.10 Create simlink on 1c
#   shell: "{{ item }}"
#   loop:
#     - "{{ srvr1c_shell_create_ras_simlink }}"
#     - "{{ srvr1c_shell_create_server_simlink }}"
#   become: true

- name: 1.14 Reload systemd manager configuration
  ansible.builtin.systemd:
    daemon_reload: yes
  become: true

- name: "1.15 Enable and start {{ srvr1c_full_service_name}} and {{ srvr1c_full_ras_service_name }} service"
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - "{{ srvr1c_full_service_name }}"
    - "{{ srvr1c_full_ras_service_name }}"
  become: true

- name: 1.16 Add rac to PATH in .bashrc
  block:
    - name: Write rac dir to PATH
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'export PATH=$PATH:{{ srvr1c_destination }}'
        insertafter: EOF
        state: present
    
    - name: Apply changes by sourcing .bashrc
      ansible.builtin.shell: |
        source ~/.bashrc
      args:
        executable: /bin/bash
  become: true

- name: "1.17 Check status {{ srvr1c_full_service_name }}"
  shell:  "{{ srvr1c_shell_check_service_status }}"
  register: status_1c_server_service

- name: "1.18 Check status {{ srvr1c_full_ras_service_name }}"
  shell:  "{{ srvr1c_shell_check_rac_service_status }}"
  register: status_1c_server_ras_service

- name: 1.19 Debug system info
  debug:
    msg: 
      - "Timezone {{ stdout_timedatectl.stdout }}"
      - "Default locales: {{ default_locales.stdout }}"
      - "1C Server service status: {{ status_1c_server_service.stdout }}"
      - "1C Server RAS status: {{ status_1c_server_ras_service.stdout }}"
  when: srvr1c_debug_status  == true